#!/usr/bin/env python

from parser import Parser
from cleaner import Cleaner
from plotter import Plotter

def main ():
    source = 'logs'
    period = [100]
    traceFiles = ['rtgsynch', 'grand', 'nosync', 'rtgang']
    parser = Parser ()
    parsedDataHash = {}
    cleaner = Cleaner ()
    plotter = Plotter ()
    lockDurationData = {f:{} for f in traceFiles}

    lineStyles = {'rtgsynch': 'g', 'grand': 'b', 'nosync': 'k', 'rtgang': 'r'}
    gangNames = {1001: 'DNN-Gang', 1002: 'BWT-Gang'}

    for p in period:
        for f in traceFiles:
            fileName = '../traces/ktrace.%s_%d' % (f, p)
            parsedDataHash [f] = parser.parse (fileName)

            for gang in parsedDataHash [f]:
                if gang == 0:
                    continue

                lockDurationData [f][gang] = cleaner.extract_metric_from_data (
                                                f,
                                                p,
                                                gang,
                                                parsedDataHash [f][gang],
                                                'lock-duration')

                print '%15s | %d : %d samples' % (f, gang, len (lockDurationData [f][gang]))

        for gang in [1001, 1002]:
            plotter.plot ('comp_%sms' % (p), gang, lockDurationData, lineStyles, gangNames, traceFiles)

    return

if __name__ == '__main__':
    main ()
